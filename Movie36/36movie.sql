-- MOVIE 테이블
CREATE TABLE MOVIE (
    MOVIE_NAME VARCHAR(100), 
    MOVIE_RATING VARCHAR(20), 
    MOVIE_TYPE VARCHAR(20), 
    MOVIE_PRODUCER VARCHAR(50), 
    MOVIE_PERFORMER VARCHAR(300), 
    MOVIE_RELEASEDATE DATE, 
    MOVIE_OVERVIEW VARCHAR(4000), 
    MOVIE_POSTER VARCHAR(2000), 
    MOVIE_STATUS VARCHAR(50), 
    MOVIE_ID VARCHAR(50), 
    PRIMARY KEY (MOVIE_ID)
);

-- SCREEN 테이블
CREATE TABLE SCREEN (
    SCREEN_ID VARCHAR(20), 
    SCREEN_NAME VARCHAR(10), 
    SCREEN_TYPE VARCHAR(20), 
    SCREEN_TOTAL_SEATS INT, 
    PRIMARY KEY (SCREEN_ID)
);

-- SCHEDULE 테이블
CREATE TABLE SCHEDULE (
    SCHEDULE_ID VARCHAR(20), 
    SCHEDULE_DATE DATE NOT NULL, 
    SHOW_TIME VARCHAR(20) NOT NULL, 
    MOVIE_ID VARCHAR(20) NOT NULL, 
    SCREEN_ID VARCHAR(10) NOT NULL, 
    PRIMARY KEY (SCHEDULE_ID),
    CONSTRAINT FK_MOVIE FOREIGN KEY (MOVIE_ID)
        REFERENCES MOVIE (MOVIE_ID), 
    CONSTRAINT FK_SCREEN FOREIGN KEY (SCREEN_ID)
        REFERENCES SCREEN (SCREEN_ID)
);

--TICKET 테이블
CREATE TABLE TICKET (
    TICKET_ID VARCHAR2(20) PRIMARY KEY,        
    SCHEDULE_ID VARCHAR2(20),                  
    CUSTOMER_NAME VARCHAR2(20),                
    CUSTOMER_PHONE VARCHAR2(20),               
    CUSTOMER_COUNT NUMBER,                    
    SELECT_SEATS VARCHAR2(50),                
    PAYMENT VARCHAR2(20),                      
    
    CONSTRAINT FK_SCHEDULE_ID FOREIGN KEY (SCHEDULE_ID)
        REFERENCES SCHEDULE (SCHEDULE_ID)     
);

--FOOD 테이블
CREATE TABLE FOOD(
    FOOD_ID VARCHAR2(30)NOT NULL PRIMARY KEY, 
    FOOD_NAME VARCHAR2(50),
    FOOD_TYPE VARCHAR2(50),
    FOOD_PRICE NUMBER,
    FOOD_AMOUNT NUMBER,
    FOOD_IMAGE VARCHAR2(2000),
    FOOD_DESC VARCHAR2(4000)
);
    
--ORDERS 테이블
CREATE TABLE ORDERS (
    ORDER_ID VARCHAR2(20) PRIMARY KEY,
    ORDER_DATE DATE NOT NULL,
    ORDER_TOTAL_AMOUNT NUMBER(10) NOT NULL,
    ORDER_PAYMENT VARCHAR2(50) NOT NULL,
    ORDER_NO VARCHAR2(20) UNIQUE NOT NULL
);

--ORDER_DETAIL 테이블
CREATE TABLE ORDER_DETAIL (
    ITEM_ID NUMBER PRIMARY KEY,
    ORDER_ID VARCHAR2(20) NOT NULL,
    FOOD_ID VARCHAR2(20) NOT NULL,
    ITEM_QUANTITY NUMBER(5) NOT NULL,
    PRICE NUMBER(10) NOT NULL,
    CONSTRAINT FK_ORDERS FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ORDER_ID),
    CONSTRAINT FK_FOOD FOREIGN KEY (FOOD_ID) REFERENCES FOOD (FOOD_ID)
);

--시퀀스 생성(ITEMID 자동 증가)
CREATE SEQUENCE ORDER_DETAIL_SEQ
    START WITH 1 
    INCREMENT BY 1
    NOCACHE;
